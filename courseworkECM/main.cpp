/**
*  Исследование многопроцессорной системы.
Исследуемая система включает в себя N процессоров и N блоков памяти (N=5). Каждый процессор
выполняет программу, не зависящую от программ, выполняемых на других процессорах. Большая
часть данных, используемых программой (Pn = 90%, 60%), сосредоточена в одном блоке памяти
(номер блока соответствует номеру процессора). Оставшаяся часть данных равномерно
распределена среди остальных блоков памяти.
Программа включает в себя K команд. Среди них Kr команд не требуют обращений к внешней
памяти (90%, 70%, 60% от общего числа команд). Будем считать, что такие команды выполняются в
течение одной единицы времени. Каждая из оставшихся K-Kr команд требует одного обращения к
памяти. Будем считать, что собственно обращение к памяти (без учета времени ожидания
предоставления шины, канала коммутатора или времени передачи между вычислительными
модулями) составляет M единиц времени (2, 5, 10). Будем считать, что команды, требующие
обращений к памяти и команды, не требующие обращений к памяти, равномерно распределены
в программе. Будем считать, что до завершения выполнения предыдущей команды следующая
команда выполняться не начнет.
В данной работе исследуется 2 варианта организации коммуникационной системы:
1. На базе общей шины (все процессоры подключены к шине и выполняют функции ведущих
устройств, все блоки памяти подключены к общей шине и выполняют функции ведомых
устройств) (пример на рис. 1)
2. На базе коммутатора (пример на рис 2)
*/
#include "Menu.h"

int main() {
    startProgram();
    return 0;
}
